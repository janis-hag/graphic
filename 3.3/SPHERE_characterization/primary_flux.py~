import numpy as np
import pyfits as pf
import sys
sys.path.insert(0, '/Users/sebastien/Desktop/GRAPHIC/SPHERE_characterization/contrast_curve_SPHERE/')
from Neutral_density import *

#wdir='/Users/sebastien/Desktop/HD4113/'
#image_filename='nomask_final_image_HD_4113_DB_H23_ps_3.3.0_nc_1450.0_3.5_0.3_30.0_1200.0_sdi_cl_nomed_SPHER_2016-07-20T08_21_59_475_SCIENCE'


def primary_flux(wdir,path_results,image_filename):
    if ("left" in image_filename) or ("sdi" in image_filename):
        flux_filename='psf_left.fits'
    elif ("right" in image_filename):
        flux_filename='psf_right.fits'
    else:
        print "Error could not find if left or right or sdi file for psf filename"
    image_file=wdir+image_filename
    flux_file=wdir+flux_filename
    # Load the image and the flux image
    image,hdr=pf.getdata(image_file,header=True)
    flux_image,hdr_flux=pf.getdata(flux_file,header=True)
    
    primary_flux=np.nanmax(flux_image)
    
    DIT_flux=hdr_flux['HIERARCH ESO DET SEQ1 DIT']
    DIT_image=hdr['HIERARCH ESO DET SEQ1 DIT']
    
    band_filter_image=hdr['HIERARCH ESO INS COMB IFLT']
    band_filter_flux=hdr_flux['HIERARCH ESO INS COMB IFLT']
    
    
    lambda_image=band_filter(band_filter_image,image_filename)
    lambda_flux=band_filter(band_filter_flux,flux_filename)
    
    Neutral_density_image=1./Neutral_density(hdr,lambda_image)
    Neutral_density_flux=1./Neutral_density(hdr_flux,lambda_flux)
    
    primary_flux=(primary_flux*Neutral_density_flux*DIT_image)/(Neutral_density_image*DIT_flux)
    print primary_flux
    f=open(path_results+"primary_flux.txt","a")
    if ("left" in image_filename) or ("sdi" in image_filename):
        f.write("left_image:\t"+str(primary_flux)+"\n")
    elif ("right" in image_filename):
        f.write("right_image:\t"+str(primary_flux)+"\n")
    f.close()